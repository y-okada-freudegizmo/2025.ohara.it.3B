services:
  # --- 1. Djangoアプリケーションサービス ---
  web:
    # 安定したPythonイメージを使用 (mysqlclientのビルドに必要)
    image: python:3.11
    container_name: django_app
    restart: always
    volumes:
      # ホストPCのコードをコンテナ内の /app にマウント
      - ./django_project:/app
      - ./requirements.txt:/app/requirements.txt
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - PYTHONUNBUFFERED=1
      # Djangoで利用するデータベース接続情報
      - DB_NAME=meeting_room_db
      - DB_USER=django_user
      - DB_PASSWORD=mysecurepassword
      - DB_HOST=db # サービス名をホスト名として利用
      - DB_PORT=3306
    working_dir: /app

    # コンテナがすぐに終了しないよう、永続的なプロセスを実行
    # Djangoサーバーの起動や初期設定は、この後 'docker exec' で手動実行します
    command: ["tail", "-f", "/dev/null"]

  # --- 2. MySQLデータベースサービス ---
  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    # データをホストに永続化するためのボリューム
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      # データベース設定
      - MYSQL_ROOT_PASSWORD=myrootpassword
      - MYSQL_DATABASE=meeting_room_db
      - MYSQL_USER=django_user
      - MYSQL_PASSWORD=mysecurepassword
      - TZ=Asia/Tokyo

  # --- 3. phpMyAdminデータベース管理サービス ---
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin_tool
    restart: always
    # ブラウザから http://localhost:8080 でアクセス
    ports:
      - "8080:80"
    depends_on:
      - db
    environment:
      # dbサービスに接続
      - PMA_HOST=db
      - PMA_PORT=3306
      - MYSQL_ROOT_PASSWORD=myrootpassword

# データ永続化用の名前付きボリューム定義
volumes:
  mysql_data:
